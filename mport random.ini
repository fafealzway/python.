mport random
import string
import tkinter as tk
from tkinter import messagebox
import pyperclip
from tkinter import *


# إعداد الأحرف
all_chars = string.ascii_letters + string.digits + string.punctuation + " "
all_chars = list(all_chars)

# دوال التشفير
def generate_key(password):
    key_chars = all_chars.copy()
    random.seed(password)
    random.shuffle(key_chars)
    return key_chars

def encrypt_message(message, key):
    cipher_text = ""
    for letter in message:
        if letter in all_chars:
            index = all_chars.index(letter)
            cipher_text += key[index]
        else:
            cipher_text += letter
    return cipher_text

def decrypt_message(cipher_text, key):
    plain_text = ""
    for letter in cipher_text:
        if letter in key:
            index = key.index(letter)
            plain_text += all_chars[index]
        else:
            plain_text += letter
    return plain_text

# دوال الأحداث
def on_encrypt():
    password = password_entry.get()
    plain_text = message_entry.get("1.0", tk.END).strip()

    if not password:
        messagebox.showerror("خطأ", "يرجى إدخال كلمة المرور للتشفير.")
        return

    if not plain_text:
        messagebox.showerror("خطأ", "يرجى إدخال النص للتشفير.")
        return

    key = generate_key(password)
    cipher_text = encrypt_message(plain_text, key)
    encrypted_text.delete(1.0, tk.END)
    insert_text_left(encrypted_text, cipher_text)
    pyperclip.copy(cipher_text)

    # مسح النص المستخرج لأنه سيتم تحديثه بعد فك التشفير
    decrypted_text.delete(1.0, tk.END)

def on_decrypt():
    decrypt_password = decrypt_password_entry.get()
    cipher_text = encrypted_text.get("1.0", tk.END).strip()

    if not decrypt_password:
        messagebox.showerror("خطأ", "يرجى إدخال كلمة المرور لفك التشفير.")
        return

    if not cipher_text:
        messagebox.showerror("خطأ", "يرجى إدخال النص المشفر.")
        return

    key_for_decrypt = generate_key(decrypt_password)
    original_password = password_entry.get()
    
    # تحقق من أن كلمة المرور لفك التشفير تطابق كلمة المرور المستخدمة في التشفير
    if key_for_decrypt != generate_key(original_password):
        messagebox.showerror("خطأ", "كلمات المرور لا تتطابق. لا يمكن فك التشفير.")
    else:
        plain_text = decrypt_message(cipher_text, key_for_decrypt)
        decrypted_text.delete(1.0, tk.END)  # مسح النص القديم
        decrypted_text.insert(tk.END, plain_text)  # إدراج النص المستخرج
        pyperclip.copy(plain_text)  # نسخ النص المستخرج إلى الحافظة

def insert_text_left(entry, text):
    entry.delete(1.0, tk.END)
    entry.insert(tk.END, text)
    entry.see(tk.END)

# إعداد واجهة المستخدم
root = tk.Tk()
root.title("التشفير")
root.geometry('800x600')
root.resizable(True, True)
img=Label(root, text='monya')
root.config(background='#8A9BA8')
root.iconbitmap('C:\\Users\\HP\\Desktop\\icon.ico.lnk')



# إعداد الإطار مباشرة في النافذة
frame = tk.Frame(root, padx=20, pady=20)
frame.pack(expand=True)

# إدخال النص المراد تشفيره
tk.Label(frame, text="Enter the text to be encrypted", font=("Arial", 12)).pack(anchor='w', padx=10)
message_entry = tk.Text(frame, height=4, width=40, font=("Arial", 12), bg="#F8F8F8", bd=1, relief="groove")
message_entry.pack(padx=10, pady=5)

# إدخال كلمة المرور للتشفير
tk.Label(frame, text="Password for Encryption", font=("Arial", 12)).pack(anchor='w', padx=10)
password_entry = tk.Entry(frame, width=40, show='*', font=("Arial", 12), bd=1, bg="#F8F8F8", relief="groove")
password_entry.pack(padx=10, pady=5)

# زر التشفير
tk.Button(frame, text="Encrypt", command=on_encrypt, bg="#8A9BA8", fg="white", font=("Arial", 12, "bold"), width=15).pack(pady=(5, 10))

# مربع النص المشفر
tk.Label(frame, text="Encrypted text", font=("Arial", 12)).pack(anchor='w', padx=10)
encrypted_text = tk.Text(frame, height=4, width=40, font=("Arial", 12), bg="#F8F8F8", bd=1, relief="groove")
encrypted_text.pack(padx=10, pady=5)
# إدخال كلمة المرور لفك التشفير
tk.Label(frame, text="Password for Decryption", font=("Arial", 12)).pack(anchor='w', padx=10)
decrypt_password_entry = tk.Entry(frame, width=40, show='*', font=("Arial", 12), bd=1, bg="#F8F8F8", relief="groove")
decrypt_password_entry.pack(padx=10, pady=5)

# زر فك التشفير
tk.Button(frame, text="Decrypt", command=on_decrypt, bg="#8A9BA8", fg="white", font=("Arial", 12, "bold"), width=15).pack(pady=(5, 10))

# مربع النص لعرض النص المستخرج
tk.Label(frame, text="Extracted text", font=("Arial", 12)).pack(anchor='w', padx=10)
decrypted_text = tk.Text(frame, height=10, width=40, font=("Arial", 12), bg="#F8F8F8", bd=1, relief="groove")
decrypted_text.pack(padx=10, pady=5)

# تشغيل التطبيق
root.mainloop()